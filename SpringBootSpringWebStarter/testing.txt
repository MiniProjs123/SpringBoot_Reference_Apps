**********************
OVERVIEW OF TEST TYPES
**********************

Name:         SmokeTest
Annotation:   @SpringBootTest
Purpose:      Asserts spring / springboot context has loaded, ie that controller has been autowired
Scope:        Spring / springboot context

Name:         PocIntegrationTest
Annotation:
Purpose:
Scope:

Name:         HealthControllerTest
Annotation:   @SpringBootTest + @AutoConfigureMockMvc
Purpose:      Basic application path responds ok to prove it is up and running
Scope:        Fullstack, but uses MockMVC to save the overhead of having to start the server.
              The part where Spring handles the incoming HTTP request and hands it off to your controller, is mocked by MockMVC.

Name:         GreetingControllerTest
Annotation:   @SpringBootTest + @AutoConfigureMockMvc
Purpose:      Tests endpoints within GreetingController class
Scope:        Fullstack, but uses MockMVC to save the overhead of having to start the server.
              The part where Spring handles the incoming HTTP request and hands it off to your controller, is mocked by MockMVC.

Name:         GreetingControllerWebLayerTest
Annotation:   @WebMvcTest(GreetingController.class)
Purpose:      Tests web layer only (ie no server starting, and not full stack - so in other words cannot debug in the service)
Scope:        Web layer only. Here further limited to the GreetingController class where the annotation exists

Name:         HealthControllerWithServerTest
Annotation:   @SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
Purpose:      Health check actually on the running server
Scope:        An actual server is used, but the port is generated dynamically

**********************
HOW TO RUN TESTS WITH MAVEN
**********************

# Run all the unit test classes.
$ mvn test

# Run a single test class.
$ mvn -Dtest=TestApp1 test

# Run multiple test classes.
$ mvn -Dtest=TestApp1,TestApp2 test

# Run a single test method from a test class.
$ mvn -Dtest=TestApp1#methodname test

# Run all test methods that match pattern 'testHello*' from a test class.
$ mvn -Dtest=TestApp1#testHello* test

# Run all test methods match pattern 'testHello*' and 'testMagic*' from a test class.
$ mvn -Dtest=TestApp1#testHello*+testMagic* test